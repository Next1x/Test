-- Acery UI Library

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local AceryUI = {}

function AceryUI:CreateUI(userSettings)
    userSettings = userSettings or {}
    
    local ui = {}
    local isMinimized = false

    local function createButtonEffect(button)
        local ripple = Instance.new("Frame")
        ripple.Size = UDim2.new(1, 0, 1, 0)
        ripple.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ripple.BackgroundTransparency = 1
        ripple.BorderSizePixel = 0
        ripple.Parent = button

        button.MouseButton1Click:Connect(function(x, y)
            local rippleEffect = Instance.new("Frame")
            rippleEffect.Position = UDim2.new(0, x - button.AbsolutePosition.X, 0, y - button.AbsolutePosition.Y)
            rippleEffect.Size = UDim2.new(0, 0, 0, 0)
            rippleEffect.BackgroundColor3 = Color3.fromRGB(30, 144, 255)
            rippleEffect.BorderSizePixel = 0
            rippleEffect.Parent = ripple

            local sizeTween = TweenService:Create(rippleEffect, TweenInfo.new(0.4), { Size = UDim2.new(2, 0, 2, 0), BackgroundTransparency = 1 })
            sizeTween:Play()

            sizeTween.Completed:Connect(function()
                rippleEffect:Destroy()
            end)
        end)
    end

    local function createButton(parent, buttonOptions)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(0, 100, 0, 30)
        button.Position = UDim2.new(0, 10, 0, 10)
        button.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
        button.BorderSizePixel = 0
        button.Text = buttonOptions.Text or "Button"
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.TextSize = 14
        button.Parent = parent

        createButtonEffect(button)

        if buttonOptions.Callback then
            button.MouseButton1Click:Connect(function()
                buttonOptions.Callback()
            end)
        end

        return button
    end

    local function createToggle(parent, toggleOptions)
        local toggle = Instance.new("TextButton")
        toggle.Size = UDim2.new(0, 100, 0, 30)
        toggle.Position = UDim2.new(0, 10, 0, 50)
        toggle.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
        toggle.BorderSizePixel = 0
        toggle.Text = toggleOptions.Text or "Toggle"
        toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
        toggle.TextSize = 14
        toggle.Parent = parent

        local isToggled = false

        createButtonEffect(toggle)

        toggle.MouseButton1Click:Connect(function()
            isToggled = not isToggled
            toggleOptions.Callback(isToggled)
        end)

        return toggle
    end

    local function createSlider(parent, sliderOptions)
        local slider = Instance.new("Frame")
        slider.Size = UDim2.new(0, 200, 0, 30)
        slider.Position = UDim2.new(0, 10, 0, 90)
        slider.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
        slider.BorderSizePixel = 0
        slider.Parent = parent

        local sliderButton = Instance.new("TextButton")
        sliderButton.Size = UDim2.new(0, 30, 0, 30)
        sliderButton.Position = UDim2.new(0, 0, 0.5, -15)
        sliderButton.BackgroundColor3 = Color3.fromRGB(30, 144, 255)
        sliderButton.BorderSizePixel = 0
        sliderButton.Text = ""
        sliderButton.Parent = slider

        createButtonEffect(sliderButton)

        local isDragging = false

        sliderButton.MouseButton1Down:Connect(function()
            isDragging = true
        end)

        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                isDragging = false
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local mouseX = input.Position.X
                local sliderX = slider.AbsolutePosition.X
                local sliderWidth = slider.AbsoluteSize.X
                local relativeX = math.clamp((mouseX - sliderX) / sliderWidth, 0, 1)
                local value = sliderOptions.Min + relativeX * (sliderOptions.Max - sliderOptions.Min)
                sliderOptions.Callback(value)
            end
        end)

        return slider
    end

    local function createMainFrame()
        local mainFrame = Instance.new("Frame")
        mainFrame.Size = UDim2.new(0, 400, 0, 500)
        mainFrame.Position = UDim2.new(0.5, -200, 0.5, -250)
        mainFrame.BackgroundColor3 = Color3.fromRGB(64, 64, 64)
        mainFrame.BorderSizePixel = 0
        mainFrame.ZIndex = 1
        return mainFrame
    end

    local function createMinimizeButton(mainFrame)
        local minimizeButton = Instance.new("TextButton")
        minimizeButton.Size = UDim2.new(0, 30, 0, 30)
        minimizeButton.Position = UDim2.new(1, -30, 0, 0)
        minimizeButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        minimizeButton.BorderSizePixel = 0
        minimizeButton.Text = "-"
        minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        minimizeButton.TextSize = 20
        minimizeButton.ZIndex = 3
        minimizeButton.Parent = mainFrame

        createButtonEffect(minimizeButton)

        minimizeButton.MouseButton1Click:Connect(function()
            isMinimized = not isMinimized
            ui.setMinimized(isMinimized)
        end)
    end

    local function createTitleBar(mainFrame)
        local titleBar = Instance.new("Frame")
        titleBar.Size = UDim2.new(1, 0, 0, 30)
        titleBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        titleBar.BorderSizePixel = 0
        titleBar.Parent = mainFrame

        local titleText = Instance.new("TextLabel")
        titleText.Size = UDim2.new(1, 0, 1, 0)
        titleText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        titleText.BorderSizePixel = 0
        titleText.Text = userSettings.WindowName or "Acery UI Library"
        titleText.TextColor3 = Color3.fromRGB(255, 255, 255)
        titleText.TextSize = 18
        titleText.Parent = titleBar
    end

    local function createContentFrame(mainFrame)
        local contentFrame = Instance.new("Frame")
        contentFrame.Size = UDim2.new(1, 0, 1, -30)
        contentFrame.Position = UDim2.new(0, 0, 0, 30)
        contentFrame.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        contentFrame.BorderSizePixel = 0
        contentFrame.Parent = mainFrame
        return contentFrame
    end

    function ui:setMinimized(value)
        if value then
            mainFrame.Size = UDim2.new(0, 30, 0, 30)
        else
            mainFrame.Size = UDim2.new(0, 400, 0, 500)
        end
    end

    function ui:init()
        ui:setMinimized(isMinimized)
    end

    local mainFrame = createMainFrame()
    createMinimizeButton(mainFrame)
    createTitleBar(mainFrame)
    local contentFrame = createContentFrame(mainFrame)

    ui.init()

    ui.MakeButton = function(self, buttonOptions)
        return createButton(contentFrame, buttonOptions)
    end

    ui.MakeToggle = function(self, toggleOptions)
        return createToggle(contentFrame, toggleOptions)
    end

    ui.MakeSlider = function(self, sliderOptions)
        return createSlider(contentFrame, sliderOptions)
    end

    return ui
end

return AceryUI
